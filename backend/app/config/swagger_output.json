{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "OSTestBed API",
    "description": "OSTestBed API"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "api",
      "description": "general endpoints not associated with an entity (endpoints you care about)."
    },
    {
      "name": "user",
      "description": "endpoints related to users."
    },
    {
      "name": "event",
      "description": "endpoints related to events."
    },
    {
      "name": "eventType",
      "description": "endpoints related to event types."
    },
    {
      "name": "password",
      "description": "endpoints related to passwords."
    },
    {
      "name": "computer",
      "description": "endpoints related to computers."
    },
    {
      "name": "session",
      "description": "endpoints related to sessions."
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/login": {
      "post": {
        "tags": [
          "api"
        ],
        "description": "Use this to login to the website.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "email@email.com"
                },
                "password": {
                  "type": "string",
                  "example": "somePassword48$"
                }
              }
            },
            "description": "A json object containing the email and password of a user attempting to log in."
          }
        ],
        "responses": {
          "200": {
            "description": "Sent when a user successfully logs in.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully logged in."
                },
                "usedAdminPassword": {
                  "type": "boolean",
                  "example": false
                },
                "isNewUser": {
                  "type": "boolean",
                  "example": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "isAdmin": {
                      "type": "boolean",
                      "example": false
                    },
                    "userId": {
                      "type": "number",
                      "example": 1
                    },
                    "email": {
                      "type": "string",
                      "example": "email@email.com"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2022-02-24T02:26:42.581Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2022-02-24T02:26:42.581Z"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Sent when the password was incorrect."
          },
          "412": {
            "description": "Sent when something is wrong with your request's json object."
          }
        }
      }
    },
    "/api/reboot/{id}": {
      "post": {
        "tags": [
          "api"
        ],
        "description": "Reboots the PoE for a specific computer by calling a script on the backend.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The computer id to reboot."
          }
        ],
        "responses": {
          "200": {
            "description": "Sent when the command was executed successfully."
          },
          "412": {
            "description": "Sent when the computer ID specified does not exist."
          },
          "500": {
            "description": "Sent when something went wrong with the backend outside of frontend's control."
          }
        }
      }
    },
    "/api/upload/{id}": {
      "post": {
        "tags": [
          "api"
        ],
        "description": "Takes an uploaded kernel and stores it on the backend in the folder specific to the computer being used.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The computer id the kernel belongs to."
          }
        ],
        "responses": {
          "200": {
            "description": "Sent when the file was uploaded successfully."
          },
          "400": {
            "description": "Sent when a file was not sent in the request"
          },
          "412": {
            "description": "Sent when the computer ID specified does not exist."
          },
          "500": {
            "description": "Sent when something went wrong with the backend outside of frontend's control."
          }
        }
      }
    },
    "/api/useComputer/": {
      "post": {
        "tags": [
          "api"
        ],
        "description": "Use this to use a computer. i.e., Call when a user is attempting to user a pi\\'s terminal. Send the user ID who is requesting the computer, and the computer ID they want (not the port ID)",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "number",
                  "example": 1
                },
                "computerId": {
                  "type": "number",
                  "example": 2
                }
              }
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Sent when the computer is put in use."
          },
          "412": {
            "description": "Sent when something is wrong with your request's json object."
          },
          "500": {
            "description": "Sent when something went wrong with the backend outside of frontend's control."
          }
        }
      }
    },
    "/api/releaseComputer/": {
      "post": {
        "tags": [
          "api"
        ],
        "description": "Use this to release a computer. i.e., A user\\'s session with the terminal has ended.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "number",
                  "example": 1
                },
                "computerId": {
                  "type": "number",
                  "example": 2
                }
              }
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Sent when the computer is released."
          },
          "412": {
            "description": "Sent when something is wrong with your request's json object."
          },
          "500": {
            "description": "Sent when something went wrong with the backend outside of frontend's control."
          }
        }
      }
    },
    "/api/userActivity/": {
      "post": {
        "tags": [
          "api"
        ],
        "description": "Use this to get the amount of activity on the website.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Sent when the data is sent."
          },
          "412": {
            "description": "Sent when something is wrong with your request's json object."
          },
          "500": {
            "description": "Sent when something went wrong with the backend outside of frontend's control."
          }
        }
      }
    },
    "/api/event/": {
      "post": {
        "tags": [
          "event"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "eventTypeId": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "event"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/event/{id}": {
      "get": {
        "tags": [
          "event"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/eventTypes/": {
      "post": {
        "tags": [
          "eventType"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "event_type": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "eventType"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/eventTypes/{id}": {
      "get": {
        "tags": [
          "eventType"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/password/": {
      "post": {
        "tags": [
          "password"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                },
                "changeAdminPassword": {
                  "example": "any"
                },
                "oldPassword": {
                  "example": "any"
                },
                "newPassword": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "tags": [
          "password"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/password/{id}": {
      "get": {
        "tags": [
          "password"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "isAdmin": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/computer/": {
      "post": {
        "tags": [
          "computer"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "portId": {
                  "example": "any"
                },
                "model": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "computer"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/computer/{id}": {
      "get": {
        "tags": [
          "computer"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/session/": {
      "post": {
        "tags": [
          "session"
        ],
        "description": "Not used in prod. Just for testing.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "number",
                  "example": 1
                },
                "computerId": {
                  "type": "number",
                  "example": 2
                }
              }
            },
            "description": "A json object containing the user getting the computer and the computer id of the new session."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "session"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/session/{id}": {
      "get": {
        "tags": [
          "session"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number",
          "example": 1
        },
        "email": {
          "type": "string",
          "example": "email@email.com"
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        },
        "updatedAt": {
          "type": "string",
          "example": "2022-02-24T02:26:42.581Z"
        },
        "createdAt": {
          "type": "string",
          "example": "2022-02-24T02:26:42.581Z"
        }
      }
    },
    "Password": {
      "type": "object",
      "properties": {
        "passwordId": {
          "type": "number",
          "example": 1
        },
        "password": {
          "type": "string",
          "example": "<hashed>"
        },
        "isAdminPassword": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "eventId": {
          "type": "number",
          "example": 1
        },
        "eventTypeId": {
          "type": "number",
          "example": 2
        },
        "userId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "EventType": {
      "type": "object",
      "properties": {
        "eventTypeId": {
          "type": "number",
          "example": 1
        },
        "eventType": {
          "type": "string",
          "example": "some event"
        }
      }
    },
    "Computer": {
      "type": "object",
      "properties": {
        "computerId": {
          "type": "number",
          "example": 1
        },
        "portId": {
          "type": "number",
          "example": 2
        },
        "serialNumber": {
          "type": "string",
          "example": "some serial number"
        },
        "model": {
          "type": "string",
          "example": "3B+"
        },
        "inUse": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "Session": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "number",
          "example": 12
        },
        "userId": {
          "type": "number",
          "example": 1
        },
        "computerId": {
          "type": "number",
          "example": 1
        },
        "startTime": {
          "type": "string",
          "example": "the time the session started"
        },
        "endTime": {
          "type": "string",
          "example": "the time the session ended"
        }
      }
    }
  }
}